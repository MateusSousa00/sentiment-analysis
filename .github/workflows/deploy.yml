name: "CI/CD - Sentiment Analysis API"

on:
  push:
    branches:
      - main
      - production

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set Environment Variables
        run: |
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> $GITHUB_ENV
          echo "HOST=${{ secrets.HOST }}" >> $GITHUB_ENV
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
          echo "LOG_LEVEL=${{ secrets.LOG_LEVEL }}" >> $GITHUB_ENV
          echo "MODEL_PATH=${{ secrets.MODEL_PATH }}" >> $GITHUB_ENV
          echo "HUGGINGFACE_MODEL=${{ secrets.HUGGINGFACE_MODEL }}" >> $GITHUB_ENV
          echo "BASELINE_MODEL_PATH=${{ secrets.BASELINE_MODEL_PATH }}" >> $GITHUB_ENV
          echo "VECTORIZER_PATH=${{ secrets.VECTORIZER_PATH }}" >> $GITHUB_ENV

      - name: Authenticate with Hugging Face
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          huggingface-cli login --token "$HF_TOKEN"

      - name: Download Transformer Model from Hugging Face
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          MODEL_PATH: "src/models/transformer_finetuned"
          HUGGINGFACE_MODEL: ${{ secrets.HUGGINGFACE_MODEL }}
        run: |
          rm -rf src/models/transformer_finetuned
          echo "Model not found locally. Downloading from Hugging Face..."
          mkdir -p $MODEL_PATH
          huggingface-cli login --token $HF_TOKEN
          huggingface-cli download $HUGGINGFACE_MODEL --local-dir $MODEL_PATH
          ls -lh $MODEL_PATH

      - name: Run Full Pipeline (Dataset, Preprocessing, Training)
        run: |
          python run_pipeline.py || { echo "Pipeline failed. Stopping build."; exit 1; }

      - name: Run Tests and Check Coverage
        run: |
          pytest --cov=src tests/ --cov-report=term-missing | tee coverage.txt
          coverage_percent=$(grep -Po '\bTOTAL.*\b\K\d+(?=%)' coverage.txt)
          echo "Coverage: $coverage_percent%"
          if [ "$coverage_percent" -lt 85 ]; then
            echo "Test coverage is below 85%, deployment stopped."
            exit 1
          fi

  build_docker:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/sentiment-analysis-api:latest .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Build and push Docker images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          IMAGE_NAME: sentiment-analysis-api
        run: |      
          # Make branch names safe for Docker tags
          BRANCH_NAME=$(echo "${{ github.ref_name }}" | sed 's/\//-/g')  
          COMMIT_SHA=$(git rev-parse --short HEAD)
      
          # Full Docker image name (namespace/repo:tag)
          IMAGE_REPO="$DOCKER_USERNAME/$IMAGE_NAME"
      
          # Build Docker image with multiple tags
          docker build -t $IMAGE_REPO:$BRANCH_NAME -t $IMAGE_REPO:$BRANCH_NAME-$COMMIT_SHA .
      
          # Push both tags
          docker push $IMAGE_REPO:$BRANCH_NAME
          docker push $IMAGE_REPO:$BRANCH_NAME-$COMMIT_SHA
      
      - name: Install Hugging Face CLI
        run: pip install huggingface_hub

      - name: Authenticate with Hugging Face
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          huggingface-cli login --token "$HF_TOKEN"

      - name: Deploy Docker Image to Hugging Face Spaces
        env:
          HUGGINGFACE_USERNAME: ${{ secrets.HUGGINGFACE_USERNAME }}
          HF_REPO: "sentiment-analysis-api"
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          # Authenticate with Hugging Face
          echo "$HF_TOKEN" | huggingface-cli login --token "$HF_TOKEN"
              
          # Define the correct Hugging Face container repo (NO "spaces/" in the name)
          HF_IMAGE="ghcr.io/$HF_USERNAME/$HF_REPO"
              
          # Ensure lowercase repo name
          HF_IMAGE=$(echo $HF_IMAGE | tr '[:upper:]' '[:lower:]')
              
          # Tag the Docker image properly
          docker tag ${{ secrets.DOCKER_USERNAME }}/sentiment-analysis-api:latest $HF_IMAGE:latest
              
          # Push the image to Hugging Face
          docker push $HF_IMAGE:latest

  deploy_huggingface:
    runs-on: ubuntu-latest
    needs: build_docker
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Hugging Face CLI
        run: pip install huggingface_hub

      - name: Log in to Hugging Face
        run: |
          huggingface-cli login --token "${{ secrets.HF_TOKEN }}"

      - name: Update Hugging Face Space
        run: |
          huggingface-cli repo update --repo-type=space ${{ secrets.HUGGINGFACE_API }} --token "${{ secrets.HF_TOKEN }}"